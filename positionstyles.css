/* CSS - Name: "positionstyles.css" */
/* Activity 1 styles */
.content1 {
  /* This is the parent of the activity 1 boxes. */
  display: grid;
  grid-template-columns: 1fr 1fr;
  justify-items: center;
  gap: 20px;

}
.red1 { 
  
  width: 100%; 
  height: 100px; 
  background-color: red; 
  grid-column: 1/3

} 
.green1 {
  width: 200px; 
  height: 200px; 
  background-color: green; 

} 
.yellow1 {
  width: 200px; 
  height: 200px; 
  background-color: gold; 
} 
.blue1 {
  width: 100%; 
  height: 100px; 
  background-color: blue; 
  grid-column: 1/3;
} 
/* Activity 2 styles */ 
.content2 {
  /* This is the parent of the activity 2 boxes. */
  
}
.red2 {
  margin-top: -50px;
  width: 100px; 
  height: 100px; 
  background-color: red; 
} 
.green2 { 
  width: 100px; 
  height: 100px; 
  background-color: green; 
  margin-top: -50px;
  margin-left: 50px;
} 
.yellow2 {
  width: 100px; 
  height: 100px; 
  background-color: gold; 
  margin-top: -50px;
  margin-left: 100px;
} 
.blue2 {
  width: 100px; 
  height: 100px; 
  background-color: blue; 
  margin-top: -50px;
  margin-left: 150px;

} 

/* Activity 3 styles */
.content3 {
  display: grid;
  grid-template-columns: 2fr 100px 2fr; /* 左の列を2fr、中央のgapを20px、右の列を2frに変更 */
  grid-template-rows: 25vh 50vh 25vh; /* 赤と青を25vh、緑と黄色を50vhに */
  grid-template-areas: 
    "red red red"     /* 1行目は赤のみ */
    "green . yellow" /* 2行目は左に緑、中央にgap、右に黄色 */
    "blue blue blue"; /* 3行目は青のみ */
  justify-items: center;
  align-items: center;
  gap: 0; /* gapは個別に設定するので0にする */
}

.red3 {
  grid-area: red; /* 赤のエリア */
  width: 100%;
  height: 100%; /* グリッドエリア全体に合わせる */
  background-color: red; 
} 

.green3 {
  grid-area: green; /* 緑のエリア */
  width: 100%; /* 幅を100%にしてグリッドの幅を使用 */
  height: 100%; /* グリッドエリア全体に合わせる */
  background-color: green;
}

.yellow3 {
  grid-area: yellow; /* 黄色のエリア */
  width: 100%; /* 幅を100%にしてグリッドの幅を使用 */
  height: 100%; /* グリッドエリア全体に合わせる */
  background-color: gold; 
}

.blue3 {
  grid-area: blue; /* 青のエリア */
  width: 100%;
  height: 100%; /* グリッドエリア全体に合わせる */
  background-color: blue; 
}

/* Activity 4 styles */ 
.content4 {
  display: grid;
  grid-template-columns: 1fr 1fr; /* 左右の列を1frずつ */
  grid-template-rows: 1fr 1fr 1fr; /* 上下の行を3分割 */
  height: 400px; /* コンテナの高さ */
}

.red4 {
  grid-column: 1; /* 左側のエリアに配置 */
  grid-row: 1 / 4; /* 上下3行に広がる */
  background-color: red; 
} 

.green4 {
  grid-column: 2; /* 右側のエリアに配置 */
  grid-row: 1; /* 上の行 */
  background-color: green; 
} 

.yellow4 {
  grid-column: 2; /* 右側のエリアに配置 */
  grid-row: 2; /* 中央の行 */
  background-color: gold; 
} 

.blue4 {
  grid-column: 2; /* 右側のエリアに配置 */
  grid-row: 3; /* 下の行 */
  background-color: blue; 
} 

/* Activity 5 */
.content5 {
  width: 100%;
  max-width: 100%; /* 最大幅を制限しない */
}

.red5 {
  width: 100%;
  height: 100px;
  background-color: red;
  
}

.green5 {
  width: 200px;
  height: 190px;
  background-color: green;
  float: left; /* テキストを回り込ませるためにfloatを指定 */
  margin-right: 10px; /* 少しスペースを空ける */
}

.yellow5 {
  background-color: yellow;
  padding: 10px;
  width: 100%;
  box-sizing: border-box; /* パディングを含めた幅の計算 */
}

.blue5 {
  width: 100%;
  height: 100px;
  background-color: blue;
  
}


/* Activity 6 styles */
.content6 {
  display: grid;
  grid-template-columns: repeat(6, 1fr); /* 6列のグリッド */
  grid-template-rows: repeat(6, 1fr); /* 6行のグリッド */
  width: 100%;
  max-width: 100%;
  height: 100vh; /* 画面全体の高さ */
  margin: 0 auto;
}

.red6 {
  grid-column: 1 / 5; /* 左上から横4列 */
  grid-row: 1 / 3; /* 縦2行 */
  background-color: red;
  z-index: 1;
}

.blue6 {
  grid-column: 2 / 6; /* 中央に4列 */
  grid-row: 2 / 6; /* 中央から下に4行 */
  background-color: blue;
  z-index: 2;
}

.yellow6 {
  grid-column: 5 / 7; /* 右下端に2列 */
  grid-row: 4 / 7; /* 下端に3行 */
  background-color: gold;
  z-index: 3;
}

.green6 {
  grid-column: 1 / 3; /* 左下端に2列 */
  grid-row: 5 / 7; /* 下端に2行 */
  background-color: green;
  z-index: 4;
}





/* Do not make any changes below here */
.activity {
  width: 70%; 
  margin: 20px auto; 
  font-family: Arial, sans-serif; 
  border: 1px solid black; 
  padding: 10px; 
  clear:both; 
  overflow: auto;
} 

.hint {
  border: 1px solid grey;
  background: #e0e0e0;
  padding: .5em;
  position: relative;
  margin: 1em 0;
}
.hint h3 {
  margin: 0;
}
.hint:hover {
  background: #d0d0d0;
}
.hint > div {
  display: none;
}

.hint input[type=checkbox] {
  position: absolute;
  width: 100%;
  height: 100%;
  opacity: 0;
  z-index: 1;
  cursor: pointer;
}

.hint input[type=checkbox]:checked ~ div {
  display: block;
}

.hint i {
  position: absolute;
  transform: translate(-6px, 0);
  margin-top: 16px;
  right: 10px;
  top: -3px;
}
.hint i:before, .hint i:after {
  content: "";
  position: absolute;
  background-color: black;
  width: 3px;
  height: 9px;
}
.hint i:before {
  transform: translate(2px, 0) rotate(45deg);
}
.hint i:after {
  transform: translate(-2px, 0) rotate(-45deg);
}

.hint input[type=checkbox]:checked ~ i:before {
  transform: translate(-2px, 0) rotate(45deg);
}
.hint input[type=checkbox]:checked ~ i:after {
  transform: translate(2px, 0) rotate(-45deg);
}
.hint a {
  position: relative;
  z-index: 1;
}